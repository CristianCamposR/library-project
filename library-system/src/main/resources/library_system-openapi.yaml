openapi: "3.1.0"
info:
  title: "library_system API"
  description: "library_system API"
  version: "1.0.0"
servers:
  - url: "https://library_system"
paths:
  /api/loans:
    get:
      summary: "GET api/loans"
      operationId: "getAllLoans"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Loan"
    post:
      summary: "POST api/loans"
      operationId: "addLoan"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Loan"
        required: true
      responses:
        "200":
          description: "OK"
  /api/loans/{id}:
    get:
      summary: "GET api/loans/{id}"
      operationId: "getLoanById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Loan"
    delete:
      summary: "DELETE api/loans/{id}"
      operationId: "deleteLoan"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
  /api/loans/{id}/return:
    put:
      summary: "PUT api/loans/{id}/return"
      operationId: "returnLoan"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
  /api/books:
    get:
      summary: "GET api/books"
      operationId: "getAllBooks"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Book"
    post:
      summary: "POST api/books"
      operationId: "addBook"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/books/{id}:
    get:
      summary: "GET api/books/{id}"
      operationId: "getBookById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Book"
    put:
      summary: "PUT api/books/{id}"
      operationId: "updateBook"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    delete:
      summary: "DELETE api/books/{id}"
      operationId: "deleteBook"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/students:
    get:
      summary: "GET api/students"
      operationId: "getAllStudents"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Student"
components:
  schemas:
    Book:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        author:
          type: "string"
        isbn:
          type: "string"
        quantity:
          type: "integer"
          format: "int32"
        available:
          type: "integer"
          format: "int32"
    Student:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        studentNumber:
          type: "string"
        email:
          type: "string"
        phone:
          type: "string"
    Loan:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        book:
          $ref: "#/components/schemas/Book"
        student:
          $ref: "#/components/schemas/Student"
        loanDate:
          type: "string"
          format: "date-time"
        returnDate:
          type: "string"
          format: "date-time"